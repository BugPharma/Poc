{"ast":null,"code":"import * as d3 from 'd3';\nimport data from './csv/eng.csv'; //create a div element for D3 to build upon\n\nvar node = document.createElement('div'); //dimensions and margins of the graph\n\nvar margin = {\n  top: 10,\n  right: 30,\n  bottom: 30,\n  left: 60\n},\n    width = 600 - margin.left - margin.right,\n    height = 450 - margin.top - margin.bottom; // append the svg object to the div element created before\n\nvar svg = d3.select(node).append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); // read the data\n\nd3.csv(data, function (data) {\n  console.log(data);\n  var x = d3.scaleLinear().domain([0, 38]).range([0, width]);\n  svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x)); // Add Y axis\n\n  var y = d3.scaleLinear().domain([0, 19]).range([height, 0]);\n  svg.append(\"g\").call(d3.axisLeft(y));\n  svg.append('g').selectAll(\"dot\").data(data) //.filter(function(d,i){return i<50})) // the .filter part is just to keep a few dots on the chart, not all of them\n  .enter();\n});\nexport default node;","map":{"version":3,"sources":["/home/nicla/Scrivania/boh/prova/src/scatterPlot.js"],"names":["d3","data","node","document","createElement","margin","top","right","bottom","left","width","height","svg","select","append","attr","csv","console","log","x","scaleLinear","domain","range","call","axisBottom","y","axisLeft","selectAll","enter"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AACA,OAAOC,IAAP,MAAiB,eAAjB,C,CAEA;;AACA,IAAIC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAX,C,CAEA;;AACA,IAAIC,MAAM,GAAG;AAACC,EAAAA,GAAG,EAAE,EAAN;AAAUC,EAAAA,KAAK,EAAE,EAAjB;AAAqBC,EAAAA,MAAM,EAAE,EAA7B;AAAiCC,EAAAA,IAAI,EAAE;AAAvC,CAAb;AAAA,IACAC,KAAK,GAAG,MAAML,MAAM,CAACI,IAAb,GAAoBJ,MAAM,CAACE,KADnC;AAAA,IAEAI,MAAM,GAAG,MAAMN,MAAM,CAACC,GAAb,GAAmBD,MAAM,CAACG,MAFnC,C,CAKA;;AACA,IAAII,GAAG,GAAGZ,EAAE,CAACa,MAAH,CAAUX,IAAV,EACLY,MADK,CACE,KADF,EAELC,IAFK,CAEA,OAFA,EAESL,KAAK,GAAGL,MAAM,CAACI,IAAf,GAAsBJ,MAAM,CAACE,KAFtC,EAGLQ,IAHK,CAGA,QAHA,EAGUJ,MAAM,GAAGN,MAAM,CAACC,GAAhB,GAAsBD,MAAM,CAACG,MAHvC,EAILM,MAJK,CAIE,GAJF,EAKLC,IALK,CAKA,WALA,EAKa,eAAeV,MAAM,CAACI,IAAtB,GAA6B,GAA7B,GAAmCJ,MAAM,CAACC,GAA1C,GAAgD,GAL7D,CAAV,C,CAQA;;AACAN,EAAE,CAACgB,GAAH,CAAOf,IAAP,EAAa,UAASA,IAAT,EAAe;AAExBgB,EAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AAEA,MAAIkB,CAAC,GAAGnB,EAAE,CAACoB,WAAH,GACLC,MADK,CACE,CAAE,CAAF,EAAM,EAAN,CADF,EAELC,KAFK,CAEC,CAAE,CAAF,EAAKZ,KAAL,CAFD,CAAR;AAGEE,EAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EACCC,IADD,CACM,WADN,EACmB,iBAAiBJ,MAAjB,GAA0B,GAD7C,EAECY,IAFD,CAEMvB,EAAE,CAACwB,UAAH,CAAcL,CAAd,CAFN,EAPsB,CAWtB;;AACA,MAAIM,CAAC,GAAGzB,EAAE,CAACoB,WAAH,GACPC,MADO,CACA,CAAC,CAAD,EAAI,EAAJ,CADA,EAEPC,KAFO,CAED,CAAEX,MAAF,EAAU,CAAV,CAFC,CAAR;AAGAC,EAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EACCS,IADD,CACMvB,EAAE,CAAC0B,QAAH,CAAYD,CAAZ,CADN;AAGAb,EAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EACCa,SADD,CACW,KADX,EAEC1B,IAFD,CAEMA,IAFN,EAEW;AAFX,GAGC2B,KAHD;AAML,CAxBD;AA0BA,eAAe1B,IAAf","sourcesContent":["import * as d3 from 'd3';\nimport data from './csv/eng.csv';\n\n//create a div element for D3 to build upon\nvar node = document.createElement('div');\n\n//dimensions and margins of the graph\nvar margin = {top: 10, right: 30, bottom: 30, left: 60},\nwidth = 600 - margin.left - margin.right,\nheight = 450 - margin.top - margin.bottom;\n\n\n// append the svg object to the div element created before\nvar svg = d3.select(node)\n    .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"\n);\n\n// read the data\nd3.csv(data, function(data) {\n\n    console.log(data);\n\n    var x = d3.scaleLinear()\n      .domain([ 0,  38])\n      .range([ 0, width ]);\n      svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n      // Add Y axis\n      var y = d3.scaleLinear()\n      .domain([0, 19])\n      .range([ height, 0]);\n      svg.append(\"g\")\n      .call(d3.axisLeft(y));\n\n      svg.append('g')\n      .selectAll(\"dot\")\n      .data(data)//.filter(function(d,i){return i<50})) // the .filter part is just to keep a few dots on the chart, not all of them\n      .enter()\n      \n      \n})\n\nexport default node;"]},"metadata":{},"sourceType":"module"}