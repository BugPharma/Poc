{"ast":null,"code":"var _jsxFileName = \"/home/nicla/Scrivania/SWE/prova/src/Form.js\";\nimport React, { Component } from 'react';\nimport { convertCSVToArray } from 'convert-csv-to-array';\nimport * as cose from './control.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fileInput = /*#__PURE__*/React.createRef();\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const input = this.fileInput.current.files[0]; //prendo il CSV inserito\n\n    const reader = new FileReader();\n\n    reader.onload = function (e) {\n      const text = e.target.result;\n      const data = convertCSVToArray(text);\n      console.log(data);\n      console.log(data[1][\"common_name\"]);\n      console.log(data.length);\n      cose.arrayFinale = cose.transformArray(data);\n      console.log(cose.arrayFinale); //cose.manipulationDom();\n    };\n\n    reader.readAsText(input);\n  }\n\n  transformArray(data) {\n    data.forEach((elt, index) => {\n      // scorre le righe\n      if (index != 0) {\n        // salta la prima riga con le etichette\n        elt.forEach((elt2, index2) => {\n          // scorre le colonne\n          if (isNumeric(elt2)) {\n            data[index][index2] = Number(elt2); //che cacchio serve?\n          }\n        });\n      }\n    });\n    return data;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"Carica qui il CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contenuto\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            id: \"myForm\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bottone\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \".csv\",\n                id: \"csvFile\",\n                ref: this.fileInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \" elaborazione_form\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"button\",\n                children: \"Elabora\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/nicla/Scrivania/SWE/prova/src/Form.js"],"names":["React","Component","convertCSVToArray","cose","Form","constructor","props","handleSubmit","bind","fileInput","createRef","event","preventDefault","input","current","files","reader","FileReader","onload","e","text","target","result","data","console","log","length","arrayFinale","transformArray","readAsText","forEach","elt","index","elt2","index2","isNumeric","Number","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,OAAO,KAAKC,IAAZ,MAAsB,cAAtB;;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AACzBI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,SAAL,gBAAiBT,KAAK,CAACU,SAAN,EAAjB;AACH;;AAEDH,EAAAA,YAAY,CAACI,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,KAAK,GAAG,KAAKJ,SAAL,CAAeK,OAAf,CAAuBC,KAAvB,CAA6B,CAA7B,CAAd,CAFgB,CAE+B;;AAC/C,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,UAAUC,CAAV,EAAa;AACzB,YAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,MAAtB;AACA,YAAMC,IAAI,GAAGrB,iBAAiB,CAACkB,IAAD,CAA9B;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAAC,CAAD,CAAJ,CAAQ,aAAR,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,MAAjB;AACAvB,MAAAA,IAAI,CAACwB,WAAL,GAAmBxB,IAAI,CAACyB,cAAL,CAAoBL,IAApB,CAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYtB,IAAI,CAACwB,WAAjB,EAPyB,CAQzB;AACH,KATD;;AAWAX,IAAAA,MAAM,CAACa,UAAP,CAAkBhB,KAAlB;AAEH;;AAEDe,EAAAA,cAAc,CAACL,IAAD,EAAM;AAChBA,IAAAA,IAAI,CAACO,OAAL,CAAa,CAACC,GAAD,EAAMC,KAAN,KAAe;AAAE;AAC5B,UAAGA,KAAK,IAAI,CAAZ,EAAc;AAAE;AACdD,QAAAA,GAAG,CAACD,OAAJ,CAAY,CAACG,IAAD,EAAMC,MAAN,KAAgB;AAAE;AAC5B,cAAGC,SAAS,CAACF,IAAD,CAAZ,EAAmB;AACjBV,YAAAA,IAAI,CAACS,KAAD,CAAJ,CAAYE,MAAZ,IAAsBE,MAAM,CAACH,IAAD,CAA5B,CADiB,CACmB;AACrC;AACF,SAJD;AAKD;AACF,KARD;AASA,WAAOV,IAAP;AACD;;AAEHc,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACI;AAAM,YAAA,QAAQ,EAAE,KAAK9B,YAArB;AAAmC,YAAA,EAAE,EAAC,QAAtC;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,SAAf;AAAA,qCACI;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,MAAM,EAAC,MAA1B;AAAiC,gBAAA,EAAE,EAAC,SAApC;AAA8C,gBAAA,GAAG,EAAE,KAAKE;AAAxD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAK,cAAA,SAAS,EAAC,oBAAf;AAAA,qCACI;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAsB,gBAAA,SAAS,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH;;AA1DwB;;AA6D7B,eAAeL,IAAf","sourcesContent":["import React, {Component} from 'react'\nimport { convertCSVToArray } from 'convert-csv-to-array';\nimport * as cose from './control.js';\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.fileInput = React.createRef();  \n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const input = this.fileInput.current.files[0]; //prendo il CSV inserito\n        const reader = new FileReader();\n\n        reader.onload = function (e) {\n            const text = e.target.result;\n            const data = convertCSVToArray(text);\n            console.log(data);\n            console.log(data[1][\"common_name\"]);\n            console.log(data.length);\n            cose.arrayFinale = cose.transformArray(data); \n            console.log(cose.arrayFinale);\n            //cose.manipulationDom();\n        };\n\n        reader.readAsText(input);\n\n    }\n\n    transformArray(data){\n        data.forEach((elt, index) =>{ // scorre le righe\n          if(index != 0){ // salta la prima riga con le etichette\n            elt.forEach((elt2,index2) =>{ // scorre le colonne\n              if(isNumeric(elt2)){\n                data[index][index2] = Number(elt2); //che cacchio serve?\n              }\n            });\n          }\n        });\n        return data;\n      }\n\n    render() {\n        return (\n            <div className=\"box\">\n                <div className=\"form\">\n                    <div className=\"title\">Carica qui il CSV</div>\n                    <div className=\"contenuto\">\n                        <form onSubmit={this.handleSubmit} id=\"myForm\">\n                            <div className=\"bottone\">\n                                <input type=\"file\" accept=\".csv\" id=\"csvFile\" ref={this.fileInput}/>\n                            </div>\n                            <div className=\" elaborazione_form\">\n                                <button type=\"submit\" className='button'>Elabora</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}