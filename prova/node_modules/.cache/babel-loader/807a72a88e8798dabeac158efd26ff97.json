{"ast":null,"code":"var _jsxFileName = \"/home/nicla/Scrivania/boh/prova/src/Form.js\";\nimport React, { Component } from 'react';\nimport { convertCSVToArray } from 'convert-csv-to-array';\n/* import { Link } from \"react-router-dom\"; */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fileInput = /*#__PURE__*/React.createRef();\n    /* this.csvToArray = this.csvToArray.bind(this); */\n\n    this.samplingArray = this.samplingArray.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const input = this.fileInput.current.files[0]; //prendo il CSV inserito\n\n    const reader = new FileReader();\n\n    reader.onload = function (e) {\n      const text = e.target.result;\n      const data = this.convertCSVToArray(text);\n      console.log(data);\n      /* console.log(data[0][\"common_name\"]);\n      this.samplingArray(data); */\n    };\n\n    reader.readAsText(input);\n    alert(`Selected file - ${this.fileInput.current.files[0].name}`);\n  }\n  /* csvToArray(str, delimiter = \",\") {\n      const headers = str.slice(0, str.indexOf(\"\\n\")).split(delimiter);\n      const rows = str.slice(str.indexOf(\"\\n\") + 1).split(\"\\n\");\n    \n      const arr = rows.map(function (row) {\n          const values = row.split(delimiter);\n          const el = headers.reduce(function (object, header, index) {\n              object[header] = values[index];\n              return object;\n          }, \n          {});\n          return el;\n      });\n      return arr;\n  } */\n\n\n  samplingArray(data) {\n    console.log(data.length);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"Carica\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contenuto\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            id: \"myForm\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bottone\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \".csv\",\n                id: \"csvFile\",\n                ref: this.fileInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \" elaborazione_form\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"button\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/nicla/Scrivania/boh/prova/src/Form.js"],"names":["React","Component","convertCSVToArray","Form","constructor","props","handleSubmit","bind","fileInput","createRef","samplingArray","event","preventDefault","input","current","files","reader","FileReader","onload","e","text","target","result","data","console","log","readAsText","alert","name","length","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA;;;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AACzBG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,SAAL,gBAAiBR,KAAK,CAACS,SAAN,EAAjB;AACA;;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBH,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AAEDD,EAAAA,YAAY,CAACK,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,KAAK,GAAG,KAAKL,SAAL,CAAeM,OAAf,CAAuBC,KAAvB,CAA6B,CAA7B,CAAd,CAFgB,CAE+B;;AAC/C,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,UAAUC,CAAV,EAAa;AACzB,YAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,MAAtB;AACA,YAAMC,IAAI,GAAG,KAAKrB,iBAAL,CAAuBkB,IAAvB,CAAb;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA;AACZ;AACS,KAND;;AAQAP,IAAAA,MAAM,CAACU,UAAP,CAAkBb,KAAlB;AAEAc,IAAAA,KAAK,CACA,mBAAkB,KAAKnB,SAAL,CAAeM,OAAf,CAAuBC,KAAvB,CAA6B,CAA7B,EAAgCa,IAAK,EADvD,CAAL;AAEH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEIlB,EAAAA,aAAa,CAACa,IAAD,EAAM;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACM,MAAjB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACI;AAAM,YAAA,QAAQ,EAAE,KAAKxB,YAArB;AAAmC,YAAA,EAAE,EAAC,QAAtC;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,SAAf;AAAA,qCACI;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,MAAM,EAAC,MAA1B;AAAiC,gBAAA,EAAE,EAAC,SAApC;AAA8C,gBAAA,GAAG,EAAE,KAAKE;AAAxD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAK,cAAA,SAAS,EAAC,oBAAf;AAAA,qCACI;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAsB,gBAAA,SAAS,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;;AAnEwB;;AAsE7B,eAAeL,IAAf","sourcesContent":["import React, {Component} from 'react'\nimport { convertCSVToArray } from 'convert-csv-to-array';\n/* import { Link } from \"react-router-dom\"; */\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.fileInput = React.createRef();  \n        /* this.csvToArray = this.csvToArray.bind(this); */\n        this.samplingArray = this.samplingArray.bind(this); \n    }\n    \n    handleSubmit(event) {\n        event.preventDefault();\n        const input = this.fileInput.current.files[0]; //prendo il CSV inserito\n        const reader = new FileReader();\n\n        reader.onload = function (e) {\n            const text = e.target.result;\n            const data = this.convertCSVToArray(text);\n            console.log(data);\n            /* console.log(data[0][\"common_name\"]);\n            this.samplingArray(data); */\n        };\n\n        reader.readAsText(input);\n\n        alert(\n            `Selected file - ${this.fileInput.current.files[0].name}`    );\n    }\n\n    /* csvToArray(str, delimiter = \",\") {\n        const headers = str.slice(0, str.indexOf(\"\\n\")).split(delimiter);\n        const rows = str.slice(str.indexOf(\"\\n\") + 1).split(\"\\n\");\n      \n        const arr = rows.map(function (row) {\n            const values = row.split(delimiter);\n            const el = headers.reduce(function (object, header, index) {\n                object[header] = values[index];\n                return object;\n            }, \n            {});\n            return el;\n        });\n        return arr;\n    } */\n\n    samplingArray(data){\n        console.log(data.length);\n    }\n\n    render() {\n        return (\n            <div className=\"box\">\n                <div className=\"form\">\n                    <div className=\"title\">Carica</div>\n                    <div className=\"contenuto\">\n                        <form onSubmit={this.handleSubmit} id=\"myForm\">\n                            <div className=\"bottone\">\n                                <input type=\"file\" accept=\".csv\" id=\"csvFile\" ref={this.fileInput}/>\n                            </div>\n                            <div className=\" elaborazione_form\">\n                                <button type=\"submit\" className='button'>Submit</button>\n                            {/*<Link to=\"/result\" className=\"button\">Elabora</Link>*/}\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}