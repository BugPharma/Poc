{"ast":null,"code":"import * as d3 from 'd3';\nlet checkbox = [];\nexport function csvToArray(str) {\n  let delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \",\";\n  let array = [];\n  str = str.replace(/[\\r]+/g, ''); //tolgo \\r\n\n  const rows = str.split(\"\\n\"); //divido nelle varie righe\n\n  rows.forEach(elt => {\n    const row = elt.split(','); //crea array con elementi di ogni riga\n\n    array.push(row);\n  });\n  return array;\n}\n\nfunction isNumeric(n) {\n  return !isNaN(n);\n} // per fare qualcosa ai dati numerici\n\n\nexport function transformArray(data) {\n  data.forEach((elt, index) => {\n    if (index != 0) {\n      elt.forEach((elt2, index2) => {\n        if (isNumeric(elt2)) {\n          data[index][index2] = Number(elt2);\n        }\n      });\n    }\n  });\n  console.log(\"01_data\", data);\n  return data;\n}\nexport function manipulationDom(arrayFinale) {\n  document.querySelector(\"#csvFile\").style.display = \"none\"; //toglie la form per inserire il csv\n\n  document.querySelector(\"#bottone-input\").style.display = \"none\"; //toglie il bottone per elaborare\n\n  document.querySelector(\"#bottone-input-druid\").style.display = \"none\"; //toglie il bottone della pca\n\n  arrayFinale[1].forEach((elt, index) => {\n    if (isNumeric(elt)) {\n      checkbox.push(arrayFinale[0][index]);\n    }\n  });\n  console.log(checkbox); //creare i checkbox\n\n  createCheckBox(checkbox);\n  fine(arrayFinale);\n}\n\nfunction createCheckBox(checkB) {\n  var parentElement = document.querySelector('#myForm');\n  let counter = 0;\n  let spazio = document.createElement('br');\n\n  for (var count in checkB) {\n    var newCheckBox = document.createElement('input');\n    newCheckBox.type = 'checkbox';\n    newCheckBox.id = 'check' + count; // need unique Ids!\n\n    let space = document.createElement('br');\n    var newLabel = document.createElement('label');\n    newLabel.innerHTML = checkB[count];\n    parentElement.appendChild(space);\n    parentElement.appendChild(newCheckBox);\n    parentElement.appendChild(newLabel);\n    counter++;\n  }\n\n  parentElement.appendChild(spazio);\n  var newButton = document.createElement('button');\n  newButton.innerHTML = \"Calcola\";\n  newButton.id = \"bottoneCalcoloFinale\";\n  newButton.classList.add(\"button\");\n  newButton.style.marginTop = \"10px\";\n  newButton.type = \"button\";\n  parentElement.appendChild(newButton);\n} // toglie la prima riga e rimappa come array (?)\n\n\nfunction trasformaArray(array) {\n  let headers = array.shift(); //toglie la prima riga\n\n  let arrayModificato = array.map(function (row) {\n    const el = headers.reduce(function (object, header, index) {\n      object[header] = row[index];\n      return object;\n    }, {});\n    return el;\n  });\n  console.log(\"arr mod\", arrayModificato);\n  return arrayModificato;\n}\n\nfunction fine(data) {\n  let arrayBoolean = [];\n  let cordX;\n  let cordY;\n  let x;\n  let y;\n\n  document.querySelector(\"#bottoneCalcoloFinale\").onclick = function () {\n    //controlla i 2 check\n    checkbox.forEach((elt, index) => {\n      arrayBoolean.push(document.querySelector(`#check${index}`).checked);\n    });\n    arrayBoolean.forEach((elt, index) => {\n      if (elt == true) {\n        if (cordX == undefined) {\n          cordX = index;\n        } else {\n          cordY = index;\n        }\n      }\n    });\n    let x = checkbox[cordX];\n    let y = checkbox[cordY];\n    data[0].forEach((elt, index) => {\n      if (elt == x) {\n        cordX = index;\n      }\n\n      if (elt == y) {\n        cordY = index;\n      }\n    });\n    dataForD3(cordX, cordY, x, y, data);\n  }; //crea un array di punti: dentro a fine() per poter usare cordX e cordY\n\n\n  function dataForD3(x, y, nameX, nameY, arrayFinale) {\n    console.log(\"aa\", arrayFinale);\n    arrayFinale = deleteEmpty(arrayFinale);\n    let arrayD3 = [];\n    arrayFinale.forEach((elt, index) => {\n      let arrayTemp = [];\n      arrayTemp.push(data[index][cordX]);\n      arrayTemp.push(data[index][cordY]);\n      arrayD3.push(arrayTemp);\n    });\n    console.log(\"arrayD3\", arrayD3); // per togliere la prima riga\n\n    arrayD3 = trasformaArray(arrayD3);\n    d3Construct(arrayD3, nameX, nameY);\n  }\n}\n\nfunction deleteEmpty(array) {\n  let localArray = [];\n  array.forEach((item, i) => {\n    if (item == 0) {} else {\n      localArray.push(item);\n    }\n  });\n  return localArray;\n} //--------------------------------------------DRUID-------------------------------------------------------------------\n\n\nexport function druid(data) {\n  data = transformArray(data);\n  data = trasformaArray(data);\n  data.pop(); //SISTEMARE\n\n  const attrs = Object.keys(data[0]).filter(a => {\n    console.log(typeof data[0][a]);\n    return typeof data[0][a] === \"number\";\n  });\n  const maxes = attrs.map(a => {\n    return d3.max(data, d => d[a]);\n  });\n  console.log(maxes);\n  let a = data.map(d => attrs.map((a, i) => d[a] / maxes[i]));\n  console.log(\"a\", a);\n  let projection = new druid.PCA(a).transform(); //transformate in 2 colonne\n\n  projection = formatArray(projection);\n  console.log(\"pro\", projection);\n  d3Construct(projection, \"x\", \"y\");\n}\n\nfunction formatArray(projection) {\n  let headers = [\"x\", \"y\"];\n  let arrayModificato = projection.map(function (row) {\n    const el = headers.reduce(function (object, header, index) {\n      object[header] = row[index];\n      return object;\n    }, {});\n    return el;\n  });\n  return arrayModificato;\n}\n\nfunction min(data, nameX) {\n  let min = data[0][nameX];\n  data.forEach((item, i) => {\n    if (item[nameX] < min) {\n      min = item[nameX];\n    }\n  });\n  console.log(min);\n  return min;\n}\n\nfunction max(data, nameX) {\n  let max = data[0][nameX];\n  data.forEach((item, i) => {\n    if (item[nameX] > max) {\n      max = item[nameX];\n    }\n  });\n  console.log(max);\n  return max;\n} //--------------------------------------------D3, PLOT CSV-------------------------------------------------------------------\n\n\nfunction d3Construct(data, nameX, nameY) {\n  console.log(\"data\", data);\n  console.log(\"x\", nameX);\n  console.log(\"y\", nameY);\n  document.querySelector(\"#contenitoreForm\").style.display = \"none\";\n  document.querySelector(\"#my_dataviz\").style.display = \"block\";\n  const margin = {\n    top: 10,\n    right: 30,\n    bottom: 30,\n    left: 60\n  },\n        width = 460 - margin.left - margin.right,\n        height = 400 - margin.top - margin.bottom; // append the svg object to the body of the page\n\n  const svg = d3.select(\"#my_dataviz\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n  create(); //Read the data\n\n  function create() {\n    // Add X axis\n    const x = d3.scaleLinear().domain([min(data, nameX), max(data, nameX)]).range([0, width]);\n    svg.append(\"g\").attr(\"transform\", `translate(0, ${height})`).call(d3.axisBottom(x)); // Add Y axis\n\n    const y = d3.scaleLinear().domain([min(data, nameY), max(data, nameY)]).range([height, 0]);\n    svg.append(\"g\").call(d3.axisLeft(y)); // Add dots\n\n    svg.append('g').selectAll(\"dot\").data(data).join(\"circle\").attr(\"cx\", function (d) {\n      return x(d[nameX]);\n    }).attr(\"cy\", function (d) {\n      return y(d[nameY]);\n    }).attr(\"r\", 3.5).style(\"fill\", \"#69b3a2\");\n  }\n}","map":{"version":3,"sources":["/home/nicla/Scrivania/SWE/prova/src/control.js"],"names":["d3","checkbox","csvToArray","str","delimiter","array","replace","rows","split","forEach","elt","row","push","isNumeric","n","isNaN","transformArray","data","index","elt2","index2","Number","console","log","manipulationDom","arrayFinale","document","querySelector","style","display","createCheckBox","fine","checkB","parentElement","counter","spazio","createElement","count","newCheckBox","type","id","space","newLabel","innerHTML","appendChild","newButton","classList","add","marginTop","trasformaArray","headers","shift","arrayModificato","map","el","reduce","object","header","arrayBoolean","cordX","cordY","x","y","onclick","checked","undefined","dataForD3","nameX","nameY","deleteEmpty","arrayD3","arrayTemp","d3Construct","localArray","item","i","druid","pop","attrs","Object","keys","filter","a","maxes","max","d","projection","PCA","transform","formatArray","min","margin","top","right","bottom","left","width","height","svg","select","append","attr","create","scaleLinear","domain","range","call","axisBottom","axisLeft","selectAll","join"],"mappings":"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","sourcesContent":["import * as d3 from 'd3';\n\nlet checkbox = [];\n\nexport function csvToArray(str, delimiter = \",\"){\n  let array = [];\n  str = str.replace(/[\\r]+/g, '');//tolgo \\r\n\n  const rows = str.split(\"\\n\");//divido nelle varie righe\n\n  rows.forEach(elt => {\n    const row = elt.split(',');//crea array con elementi di ogni riga\n    array.push(row);\n  });\n  return array;\n\n}\n\nfunction isNumeric(n) { return !isNaN(n); }\n\n// per fare qualcosa ai dati numerici\nexport function transformArray(data){\n      data.forEach((elt, index) =>{\n        if(index != 0){\n          elt.forEach((elt2,index2) =>{\n            if(isNumeric(elt2)){\n              data[index][index2] = Number(elt2);\n            }\n          });\n        }\n      });\n    \n\n  console.log(\"01_data\", data);\n  return data;\n}\n\n\nexport function manipulationDom(arrayFinale){\n\n  document.querySelector(\"#csvFile\").style.display = \"none\"; //toglie la form per inserire il csv\n  document.querySelector(\"#bottone-input\").style.display = \"none\"; //toglie il bottone per elaborare\n  document.querySelector(\"#bottone-input-druid\").style.display = \"none\"; //toglie il bottone della pca\n\n  arrayFinale[1].forEach((elt, index) =>{\n    if(isNumeric(elt)){\n      checkbox.push(arrayFinale[0][index]);\n    }\n  });\n\n  console.log(checkbox);\n\n  //creare i checkbox\n  createCheckBox(checkbox);\n\n  fine(arrayFinale);\n}\n\n\nfunction createCheckBox(checkB){ \n\n  var parentElement = document.querySelector('#myForm');\n  let counter = 0;\n  let spazio = document.createElement('br');\n\n  for(var count in checkB)\n  {\n    var newCheckBox = document.createElement('input');\n    newCheckBox.type = 'checkbox';\n    newCheckBox.id = 'check' + count; // need unique Ids!\n\n    let space = document.createElement('br');\n\n    var newLabel = document.createElement('label');\n    newLabel.innerHTML = checkB[count];\n\n    parentElement.appendChild(space);\n    parentElement.appendChild(newCheckBox);\n    parentElement.appendChild(newLabel);\n    counter++;\n  }\n\n  parentElement.appendChild(spazio);\n  var newButton = document.createElement('button');\n  newButton.innerHTML = \"Calcola\";\n  newButton.id = \"bottoneCalcoloFinale\";\n  newButton.classList.add(\"button\");\n  newButton.style.marginTop = \"10px\";\n  newButton.type = \"button\";\n  parentElement.appendChild(newButton);\n}\n\n\n// toglie la prima riga e rimappa come array (?)\nfunction trasformaArray(array){\n  let headers = array.shift(); //toglie la prima riga\n\n  let arrayModificato = array.map(\n    function (row){\n      const el = headers.reduce(\n        function (object, header, index) {\n          object[header] = row[index];\n          return object;\n        }, \n        {}\n      );\n      return el;\n    }\n  );\n  \n  console.log(\"arr mod\", arrayModificato);\n  return arrayModificato;\n}\n\nfunction fine(data){\n  let arrayBoolean = [];\n  let cordX;let cordY;\n  let x;let y;\n\n  document.querySelector(\"#bottoneCalcoloFinale\").onclick = function(){\n    //controlla i 2 check\n    checkbox.forEach((elt, index)=>{\n      arrayBoolean.push((document.querySelector(`#check${index}`).checked));\n    });\n    arrayBoolean.forEach((elt, index)=>{\n      if(elt == true){\n        if(cordX == undefined){\n          cordX = index;\n        }\n        else{\n          cordY = index;\n        }\n      }\n    });\n    let x = checkbox[cordX];\n    let y = checkbox[cordY];\n    data[0].forEach((elt, index)=>{\n      if(elt == x){\n        cordX = index;\n      }\n      if(elt == y){\n        cordY = index;\n      }\n    });\n\n    dataForD3(cordX, cordY, x, y, data);\n    \n  }\n\n  \n  //crea un array di punti: dentro a fine() per poter usare cordX e cordY\n  function dataForD3(x, y, nameX, nameY, arrayFinale){\n    console.log(\"aa\",arrayFinale);\n    arrayFinale = deleteEmpty(arrayFinale); \n    \n    let arrayD3 = [];\n    arrayFinale.forEach((elt, index) =>{\n      let arrayTemp = [];\n      arrayTemp.push(data[index][cordX]);\n      arrayTemp.push(data[index][cordY]);\n      arrayD3.push(arrayTemp);\n    });\n\n    console.log(\"arrayD3\", arrayD3);\n    // per togliere la prima riga\n    arrayD3 = trasformaArray(arrayD3);\n    d3Construct(arrayD3, nameX, nameY);\n  }\n\n}\n\n\nfunction deleteEmpty(array){\n  let localArray = [];\n  array.forEach((item, i) => {\n    if(item == 0) {}\n    else {\n      localArray.push(item);\n    }\n  });\n  return localArray;\n}\n\n\n\n//--------------------------------------------DRUID-------------------------------------------------------------------\n\nexport function druid(data){\n  data = transformArray(data);\n  data = trasformaArray(data);\n  data.pop();//SISTEMARE\n  const attrs = Object.keys(data[0]).filter(\n    a => {\n      console.log(typeof data[0][a]);\n      return (typeof data[0][a] === \"number\");\n    }\n  );\n  const maxes = attrs.map(a => {\n    return d3.max(data, d => d[a]);\n  });\n\n  console.log(maxes);\n\n  let a = data.map(d => attrs.map((a, i) => d[a] / maxes[i]));\n  console.log(\"a\",a);\n\n  let projection = new druid.PCA(a).transform();//transformate in 2 colonne\n\n\n  projection = formatArray(projection);\n  console.log(\"pro\",projection);\n  d3Construct(projection, \"x\", \"y\");\n}\n\nfunction formatArray(projection){\n  let headers = [\"x\", \"y\"];\n  let arrayModificato = projection.map(function (row) {\n    const el = headers.reduce(function (object, header, index) {\n      object[header] = row[index];\n      return object;\n    }, {});\n    return el;\n  });\n  return arrayModificato;\n}\n  \nfunction min(data, nameX){\n  let min = data[0][nameX];\n  data.forEach((item, i) => {\n    if(item[nameX] < min){\n      min = item[nameX];\n    }\n  });\n  console.log(min);\n  return min;\n}\n  \nfunction max(data, nameX){\n  let max = data[0][nameX];\n  data.forEach((item, i) => {\n    if(item[nameX] > max){\n      max = item[nameX];\n    }\n  });\n  console.log(max);\n  return max;\n}\n  \n  \n//--------------------------------------------D3, PLOT CSV-------------------------------------------------------------------\n  \n  \nfunction d3Construct(data, nameX, nameY){\n  \n  console.log(\"data\", data);\n  console.log(\"x\", nameX);\n  console.log(\"y\", nameY);\n  \n  document.querySelector(\"#contenitoreForm\").style.display = \"none\";\n  document.querySelector(\"#my_dataviz\").style.display = \"block\";\n\n\n  const margin = {top: 10, right: 30, bottom: 30, left: 60},\n  width = 460 - margin.left - margin.right,\n  height = 400 - margin.top - margin.bottom;\n\n  // append the svg object to the body of the page\n  const svg = d3.select(\"#my_dataviz\")\n  .append(\"svg\")\n  .attr(\"width\", width + margin.left + margin.right)\n  .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n  .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n\n  create();\n\n  //Read the data\n  function create(){\n\n    // Add X axis\n    const x = d3.scaleLinear()\n    .domain([min(data, nameX), max(data, nameX)])\n    .range([ 0, width ]);\n    svg.append(\"g\")\n    .attr(\"transform\", `translate(0, ${height})`)\n    .call(d3.axisBottom(x));\n\n    // Add Y axis\n    const y = d3.scaleLinear()\n    .domain([min(data, nameY), max(data, nameY)])\n    .range([ height, 0]);\n    svg.append(\"g\")\n    .call(d3.axisLeft(y));\n\n    // Add dots\n    svg.append('g')\n    .selectAll(\"dot\")\n    .data(data)\n    .join(\"circle\")\n    .attr(\"cx\", function (d) { return x(d[nameX]); } )\n    .attr(\"cy\", function (d) { return y(d[nameY]); } )\n    .attr(\"r\", 3.5)\n    .style(\"fill\", \"#69b3a2\");\n  }\n}\n"]},"metadata":{},"sourceType":"module"}