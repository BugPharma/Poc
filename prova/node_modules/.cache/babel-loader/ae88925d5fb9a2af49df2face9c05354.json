{"ast":null,"code":"import * as d3 from 'd3';\nimport { create } from 'd3';\nimport { dataD3D3, xAxis, yAxis } from './control.js'; //create a div element for D3 to build upon\n\nvar node = document.createElement('div');\nconst margin = {\n  top: 10,\n  right: 30,\n  bottom: 30,\n  left: 60\n},\n      width = 460 - margin.left - margin.right,\n      height = 400 - margin.top - margin.bottom; // append the svg object to the body of the page\n\nconst svg = d3.select(node).append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\nexport function createScatter() {\n  // Add X axis\n  const x = d3.scaleLinear().domain([min(dataD3, nameX), max(dataD3, nameX)]).range([0, width]);\n  svg.append(\"g\").attr(\"transform\", `translate(0, ${height})`).call(d3.axisBottom(x)); // Add Y axis\n\n  const y = d3.scaleLinear().domain([min(dataD3, nameY), max(dataD3, nameY)]).range([height, 0]);\n  svg.append(\"g\").call(d3.axisLeft(y)); // Add dots\n\n  svg.append('g').selectAll(\"dot\").dataD3(dataD3).join(\"circle\").attr(\"cx\", function (d) {\n    return x(d[nameX]);\n  }).attr(\"cy\", function (d) {\n    return y(d[nameY]);\n  }).attr(\"r\", 3.5).style(\"fill\", \"#69b3a2\");\n}\n\nfunction min(dataD3, nameX) {\n  let min = dataD3[0][nameX];\n  dataD3.forEach((item, i) => {\n    if (item[nameX] < min) {\n      min = item[nameX];\n    }\n  });\n  console.log(min);\n  return min;\n}\n\nfunction max(dataD3, nameX) {\n  let max = dataD3[0][nameX];\n  dataD3.forEach((item, i) => {\n    if (item[nameX] > max) {\n      max = item[nameX];\n    }\n  });\n  console.log(max);\n  return max;\n}\n\nexport default node;","map":{"version":3,"sources":["/home/nicla/Scrivania/SWE/prova/src/scatterPlot.js"],"names":["d3","create","dataD3D3","xAxis","yAxis","node","document","createElement","margin","top","right","bottom","left","width","height","svg","select","append","attr","createScatter","x","scaleLinear","domain","min","dataD3","nameX","max","range","call","axisBottom","y","nameY","axisLeft","selectAll","join","d","style","forEach","item","i","console","log"],"mappings":"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","sourcesContent":["import * as d3 from 'd3';\nimport { create } from 'd3';\nimport { dataD3D3, xAxis, yAxis } from './control.js';\n\n//create a div element for D3 to build upon\nvar node = document.createElement('div');\n\nconst margin = {top: 10, right: 30, bottom: 30, left: 60},\n    width = 460 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom;\n \n// append the svg object to the body of the page\nconst svg = d3.select(node)\n  .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\",\n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\nexport function createScatter(){\n  // Add X axis\n  const x = d3.scaleLinear()\n  .domain([min(dataD3, nameX), max(dataD3, nameX)])\n  .range([ 0, width ]);\n  svg.append(\"g\")\n  .attr(\"transform\", `translate(0, ${height})`)\n  .call(d3.axisBottom(x));\n\n  // Add Y axis\n  const y = d3.scaleLinear()\n  .domain([min(dataD3, nameY), max(dataD3, nameY)])\n  .range([ height, 0]);\n  svg.append(\"g\")\n  .call(d3.axisLeft(y));\n\n  // Add dots\n  svg.append('g')\n  .selectAll(\"dot\")\n  .dataD3(dataD3)\n  .join(\"circle\")\n  .attr(\"cx\", function (d) { return x(d[nameX]); } )\n  .attr(\"cy\", function (d) { return y(d[nameY]); } )\n  .attr(\"r\", 3.5)\n  .style(\"fill\", \"#69b3a2\");\n\n}\n\nfunction min(dataD3, nameX){\n  let min = dataD3[0][nameX];\n  dataD3.forEach((item, i) => {\n    if(item[nameX] < min){\n      min = item[nameX];\n    }\n  });\n  console.log(min);\n  return min;\n}\n\nfunction max(dataD3, nameX){\n  let max = dataD3[0][nameX];\n  dataD3.forEach((item, i) => {\n    if(item[nameX] > max){\n      max = item[nameX];\n    }\n  });\n  console.log(max);\n  return max;\n}\n\n\n\nexport default node;"]},"metadata":{},"sourceType":"module"}